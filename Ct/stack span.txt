#include <limits.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#define SIZE 100
struct Stack
{
 int stackTop;
 int arr[SIZE];
};
int isFull(struct Stack s)
{
 if (s.stackTop == SIZE - 1) {
 return (1);
 }
 return (0);
}
int isEmpty(struct Stack s)
{
 if (s.stackTop == -1) {
 return (1);
 }
 else {
 return (0);
 }
}
void push(struct Stack* s, int d)
{
 if (!isFull(*s)) {
 s->arr[(s->stackTop) + 1] = d;
 s->stackTop = s->stackTop + 1;
 }
}
int pop(struct Stack* s)
{
 int data;
 if (!isEmpty(*s)) {
 data = s->arr[s->stackTop];
 s->stackTop = s->stackTop - 1;
 }
 else {
 
 data = INT_MIN;
 }
 return (data);
}
int main()
{
struct Stack s, temp;
int a[SIZE];
 printf("Enter data (-1 to stop):");
 int data, i = 0;
while(1)
 {
 scanf("%d",&a[i]);
 if(a[i]==-1) 
 break;
 i++;
 }
 
 
int span[SIZE] = {0};


    push(&s, 0);
 
   
    span[0] = a[0];
 
  
    for (int j = 1; j < i; j++) {
       while(!isEmpty(s) && a[s.stackTop]<=a[j]) 
       {
           pop(&s);
           
       }
         span[j] = (isEmpty(s)) ? a[j] : (a[s.stackTop]);
         for(int h=s.stackTop; h<j; h++)
         {
             //pop(&s);
            push(&s, h);
         }
    }
    
 
for (int j=0; j<i ; j++) 
{
    printf("%d ", span[j]);
}


}